
import random

# koskettimet
def koskettimet():
    print("_________________________________________________________")
    print("|  |X| |X|  |  |X| |X| |X|  |  |X| |X|  |  |X| |X| |X|  |")
    print("|  |X| |X|  |  |X| |X| |X|  |  |X| |X|  |  |X| |X| |X|  |")
    print("|  |X| |X|  |  |X| |X| |X|  |  |X| |X|  |  |X| |X| |X|  |")
    print("|  |X| |X|  |  |X| |X| |X|  |  |X| |X|  |  |X| |X| |X|  |")
    print("|   |   |   |   |   |   |   |   |   |   |   |   |   |   |")
    print("|   |   |   |   |   |   |   |   |   |   |   |   |   |   |")    
    print("|___|___|___|___|___|___|___|___|___|___|___|___|___|___|")
    print("")
    print("")
    print("")

# pelin sÃ¤velikkÃ¶
kaikki_sÃ¤velet = ["C", "D", "E", "F", "G", "A", "H", "C1", "D1", "E1", "F1", "G1", "A1", "H1"]

# pelin sÃ¤velikkÃ¶ f avain
kaikki_sÃ¤velet_f = ["E", "F", "G", "A", "H", "C1", "D1", "E1", "F1", "G1", "A1", "H1", "C2", "D2"]

# pelin asetukset
pisteet = 0
oikeatvastaukset = 0
vaaditut_oikeat = 2  # PerÃ¤kkÃ¤iset oikeat vastaukset, jotta pelaaja saa pisteen.

# Funktio, joka soittaa fanfaarin (tulostaa fanfaarin)
def soita_fanfaari():
    print("\nðŸŽ‰ðŸŽ¶ FANFAARI! ðŸŽ¶ðŸŽ‰")
    print("")
    print(f"Hienoa, sait yhteensÃ¤ {vaaditut_oikeat} oikein.")
    print("")

def tulosta_piano(savel):

    s = []
    i = 0

    # Kootaan lista, joka tulostetaan pianon koskettimille
    # Asetetaan listaan vain annettu sÃ¤vel ja muut alkiot jÃ¤tetÃ¤Ã¤n tyhjÃ¤ksi
    # Asetetaan annetun sÃ¤velen kummallekin puolelle kysymysmerkki
    for item in kaikki_sÃ¤velet:
        if item == savel:
            s[i-1] = "?" # tulostetaan edelliseen koskettimeen ?
            s.append(item.rstrip("1234567890")) # poistetaan sÃ¤velnumerot tulostettavasta listasta
            s.append("?") # tulostetaan seuraavaan koskettimeen ?
        else: 
            s.append(" ") # tulostetaan tyhjÃ¤ kaikkiin muihin koskettimiin

        i += 1

    print("_________________________________________________________")
    print("|  |X| |X|  |  |X| |X| |X|  |  |X| |X|  |  |X| |X| |X|  |")
    print("|  |X| |X|  |  |X| |X| |X|  |  |X| |X|  |  |X| |X| |X|  |")
    print("|  |X| |X|  |  |X| |X| |X|  |  |X| |X|  |  |X| |X| |X|  |")
    print("|  |X| |X|  |  |X| |X| |X|  |  |X| |X|  |  |X| |X| |X|  |")
    print("|   |   |   |   |   |   |   |   |   |   |   |   |   |   |")
    print(f"| {s[0]} | {s[1]} | {s[2]} | {s[3]} | {s[4]} | {s[5]} | {s[6]} | {s[7]} | {s[8]} | {s[9]} | {s[10]} | {s[11]} | {s[12]} | {s[13]} |")
    print("|___|___|___|___|___|___|___|___|___|___|___|___|___|___|")
    print("")


def tulosta_gavain(savel):  #g-avaimella sÃ¤velet

    s2 = [] #lista sÃ¤velistÃ¤
    i = 0 #sÃ¤velpaikka

    for item in kaikki_sÃ¤velet:
        if item == savel:
            s2[i-1] = "?" # tulostetaan edelliseen koskettimeen ?
            s2.append(item.rstrip("1234567890")) # poistetaan sÃ¤velnumerot tulostettavasta listasta
            s2.append("?") # tulostetaan seuraavaan koskettimeen ?
        else: 
            s2.append("") # tulostetaan tyhjÃ¤ kaikkiin muihin koskettimiin

        i += 1

   #G-AVAIN
    print("")
    print(f"                        {s2[13]} ")
    print(f"                     {s2[12]} ")
    print(f"                  {s2[11]} ")
    print(f"â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“{s2[10]}â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“")
    print(f"                  {s2[9]}                                    ")
    print(f"â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“{s2[8]}â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“")
    print(f"                       {s2[7]}                               ")
    print(f"â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“{s2[6]}â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“")
    print(f"                       {s2[5]}                               ")
    print(f"â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“{s2[4]}â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“")
    print(f"                  {s2[3]}                                    ")
    print(f"â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“{s2[2]}â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“")                                                                                            
    print(f"             {s2[1]}                                         ")
    print(f"          {s2[0]} ")
    print("")
    print("")
     

def tulosta_favain(savel): #f-avaimella sÃ¤velet
    s2 = [] #sÃ¤vellista
    i = 0 #sÃ¤velpaikka

    for item in kaikki_sÃ¤velet_f:
        if item == savel:
            s2[i-1] = "?" # tulostetaan edelliseen koskettimeen ?
            s2.append(item.rstrip("1234567890")) # poistetaan sÃ¤velnumerot tulostettavasta listasta
            s2.append("?") # tulostetaan seuraavaan koskettimeen ?
        else: 
            s2.append("") # tulostetaan tyhjÃ¤ kaikkiin muihin koskettimiin

        i += 1

    #F-AVAIN
    print("")
    print(f"")                                                                                 
    print(f"                              {s2[13]}")
    print(f"                           {s2[12]} ")
    print(f"                       {s2[11]} ")
    print(f"â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“{s2[10]}â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“")   
    print(f"                  {s2[9]} ")
    print(f"â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“{s2[8]}â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“")
    print(f"                  {s2[7]}                                     ")
    print(f"â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“{s2[6]}â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“")
    print(f"                       {s2[5]}                               ")
    print(f"â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“{s2[4]}â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“")
    print(f"                       {s2[3]}                               ")
    print(f"â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“{s2[2]}â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“")
    print(f"                {s2[1]}                                      ")  
    print(f"             {s2[0]}                                         ")  
    print("")

# HAE_PISTEET        
def hae_pisteet():
    return 5

# ALOITUSTEKSTI
pelaaja = ""
def tulosta_aloitus():
    print("")
    print("")
    print("")
    koskettimet()
    print("")
    print("Tervetuloa Koskettimien taikaa -seikkailuun!") 
    print("")
    print("TÃ¤tÃ¤ peliÃ¤ pelaamalla opit musiikin aakkoset. \nOpit sÃ¤velten jÃ¤rjestyksen koskettimilla ja viivastolla, mikÃ¤ nopeuttaa nuotinluvun oppimista.")
    print("")
    print(f"PelissÃ¤ kerÃ¤Ã¤t pisteitÃ¤ ja saatuasi riittÃ¤vÃ¤sti pisteitÃ¤ pÃ¤Ã¤set seuraavalle tasolle. Sinun tulee saada oikeita vastauksia {vaaditut_oikeat}.\nTehtÃ¤vÃ¤si on selvittÃ¤Ã¤ tiesi neljÃ¤n tason kautta pelin loppuun. Aivan lopuksi saat ratkaistavan arvoituksen.")
    print("")
    print("")
    print("Oletko valmis seikkailuun ja selvittÃ¤mÃ¤Ã¤n koskettimien salaisuudet?")
    print("")
    pelaaja = input("Anna nimesi: ")
    print(f"Hei {pelaaja}!")

# NAAPURIT - KOSKETINSUUNTA
def hae_naapurit(sÃ¤vel, sÃ¤vel_list):
    index = sÃ¤vel_list.index(sÃ¤vel)
    naapurit = []

    # VARMISTETAAN, ETTEI YLITETÃ„ LISTAA
    naapurit.append(sÃ¤vel_list[index - 1])  # ALIN
    naapurit.append(sÃ¤vel_list[index + 1])  # YLIN
    return naapurit

# NAAPURIKYSYMYS
def kysy_kysymys(taso: int):
    #Kysyy satunnaisen sÃ¤velen ja sen naapurit.
    global oikeatvastaukset

    sÃ¤vel_list = kaikki_sÃ¤velet

    if taso == 3:
        sÃ¤vel_list = kaikki_sÃ¤velet_f

    #g-avaimen sÃ¤velten lista 
    kysyttÃ¤vÃ¤t_sÃ¤velet = sÃ¤vel_list.copy()
    kysyttÃ¤vÃ¤t_sÃ¤velet.pop(0) # poistetaan ensimmÃ¤inen
    kysyttÃ¤vÃ¤t_sÃ¤velet.pop() # poistetaan viimeinen

    if taso == 1:
        #ARVOTAAN KYSYMYS
        arvottu_sÃ¤vel = random.choice(kysyttÃ¤vÃ¤t_sÃ¤velet)  #arvotaan sÃ¤vel, jota kysytÃ¤Ã¤n
        naapurit = hae_naapurit(arvottu_sÃ¤vel, sÃ¤vel_list)  #etsi naapurit

        tulosta_piano(arvottu_sÃ¤vel) # kutsutaan tulosta_piano-funktiota

    if taso == 2:
        #ARVOTAAN KYSYMYS
        arvottu_sÃ¤vel = random.choice(kysyttÃ¤vÃ¤t_sÃ¤velet)  #arvotaan sÃ¤vel, jota kysytÃ¤Ã¤n
        naapurit = hae_naapurit(arvottu_sÃ¤vel, sÃ¤vel_list)  #etsi naapurit

        tulosta_gavain(arvottu_sÃ¤vel) #kutsutaan tulosta_gavain-funktiota

    if taso == 3:
        #ARVOTAAN KYSYMYS
        arvottu_sÃ¤vel = random.choice(kysyttÃ¤vÃ¤t_sÃ¤velet)  #arvotaan sÃ¤vel, jota kysytÃ¤Ã¤n
        naapurit = hae_naapurit(arvottu_sÃ¤vel, sÃ¤vel_list)  #etsi naapurit

        tulosta_favain(arvottu_sÃ¤vel) #kutsutaan tulosta_favain-funktiota

    # POISTETAAN SÃ„VELLISTAN NUMEROINNIT: ei haluta oktaavialoja, ei olennaista sÃ¤velten jÃ¤rjestysten oppimisen kannalta
    kysymys_sÃ¤vel = arvottu_sÃ¤vel.rstrip("1234567890")

    print(f"(Pisteesi: {oikeatvastaukset} / {vaaditut_oikeat}) \nMitkÃ¤ ovat sÃ¤velen {kysymys_sÃ¤vel.upper()} naapurit? Anna alempi ensin.") #kysymys

    # PELAAJAN VASTAUS
    pelaajan_vastaus = input(f"Naapurit: ").strip()

    # HUOMIOIDAAN ERILAISET VASTAUKSET; poistetaan kaikki ylimÃ¤Ã¤rÃ¤iset vÃ¤lilyÃ¶nnit ja muutetaan kaikki isoiksi kirjaimiksi
    pelaajan_vastaus = pelaajan_vastaus.upper().replace(" ", "").replace("JA", "").replace(",", "")

#VASTAUKSEN TARKASTUS
    # Muutetaan oikea vastaus listasta merkkijonoksi, verrataan sitÃ¤ pelaajan antamaan vastaukseen
    oikea_vastaus = ""
    for i in naapurit:
        item = i.rstrip("1234567890")
        oikea_vastaus += item
    
    # Onko vastaus oikein
    if pelaajan_vastaus == oikea_vastaus:
        oikeatvastaukset += 1
        print("")
        print("Oikein! Hienosti osattu.")
        print("")
    else:
        oikeatvastaukset -= 1  # VÃ¤Ã¤rÃ¤ vastaus vÃ¤hentÃ¤Ã¤ yhden pisteen
        print("")
        print(f"Oi voi, nyt ei mennyt aivan oikein; sinulta vÃ¤hennetÃ¤Ã¤n yksi piste. \nOikea vastaus on: {oikea_vastaus[0]} ja {oikea_vastaus[1]}.")
        print("")

    if oikeatvastaukset == vaaditut_oikeat:
        return True
    return False




# ------------------------------PÃ„Ã„OHJELMA--------------------------------------
# GLOBAALIT PARAMETRIT, ALOITUS
def pelaa_peli():
    global pisteet, oikeatvastaukset
    tulosta_aloitus()

    print("\nAloitetaan!\n")
    print("")
    
    # Taso 1
    print("Olet tasolla 1.")
    print("")
    
    while True:
        if kysy_kysymys(1):
            pisteet += 1
            if oikeatvastaukset == vaaditut_oikeat:
                soita_fanfaari()
                print("PÃ¤Ã¤set seuraavalle tasolle!")
                oikeatvastaukset = 0  #nollataan pisteet seuraavaa tasoa varten
                print("")
                break  # SiirrytÃ¤Ã¤n seuraavalle tasolle

    # Taso 2
    print("")
    print("* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *")
    print("")
    print("Olet tasolla 2. Harjoitellaan nyt sÃ¤veliÃ¤ viivastolla G-avaimen sÃ¤velpaikoilla.")
    
    while True:
        if kysy_kysymys(2):
            pisteet += 1
            if oikeatvastaukset == vaaditut_oikeat:
                soita_fanfaari()
                print("PÃ¤Ã¤set seuraavalle tasolle 3!")
                oikeatvastaukset = 0 #nollataan pisteet seuraavaa tasoa varten
                print("")
                break  # SiirrytÃ¤Ã¤n tasolle 3

    # Taso 3
    print("")
    print("* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *")
    print("")
    print("Olet tasolla 3. Harjoitellaan nyt sÃ¤veliÃ¤ viivastolla F-avaimen sÃ¤velpaikoilla!")
    while True:
        if kysy_kysymys(3):
            pisteet += 1
            print("")
            if oikeatvastaukset == vaaditut_oikeat:
                soita_fanfaari()
                print("PÃ¤Ã¤set seuraavalle tasolle 4!")
                oikeatvastaukset = 0 #nollataan pisteet seuraavaa tasoa varten
                print("")
                break 

    # Taso 4
    print("")
    print("* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *")
    print("")
    print("Olet tasolla 4. Loppukiri - nyt saat erilaisia tehtÃ¤viÃ¤ perÃ¤kkÃ¤in!")
    while True:
        if kysy_kysymys(random.choice([1,2,3])):
            pisteet += 1
            print("")
            if oikeatvastaukset == vaaditut_oikeat:
                soita_fanfaari()
                print("Mahtavaa! Olet lÃ¤pÃ¤issyt kaikki tasot. Nyt saat arvoituksen.")
                break  # Pelin loppu

    # Arvoitus
    print("")
    print("* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *")
    print("")
    print("SANA-ARVOITUS - KIRJAIMET SEKAISIN")
    print("Olet jo melkein selvittÃ¤nyt Koskettimien taikaa -pelin. Nyt sinun pitÃ¤Ã¤ ratkaista vielÃ¤ sana-arvoitus!")
    print("")
    
    arvoitus = ["Flyygeli", "Pianonsoitto", "Koskettimet", "Sorminumerot", "Nuottiviivasto", "YlÃ¶spÃ¤in", "Joulupukki", "Soittotunti"]
    vastaus = random.choice(arvoitus)
    kirjaimet_sekoitettu = ''.join(random.sample(vastaus, len(vastaus))) # Muutetaan sana listaksi kirjaimista ja sekoitetaan ne
    print(f"TÃ¤ssÃ¤ on sana-arvoitus, jossa on kirjaimet sekaisin. \nMikÃ¤ sana nÃ¤istÃ¤ muodostuu? {kirjaimet_sekoitettu}")
    print("")

    while True:
        arvaus = input(f"Vastaus: ")
        if arvaus.lower() == vastaus.lower():
            print("")
            soita_fanfaari()
            print(f"Onneksi olkoon, {arvaus} on oikein. Olet ratkaissut arvoituksen ja selvittÃ¤nyt kaikki pelin tasot.")
            print("")
            print("Koskettimien taikaa -peli on pÃ¤Ã¤ttynyt. Voit aloittaa uudelleen pelin.")
            print("")
            koskettimet()
            print("")
            break
        else: 
            print("")
            print("YritÃ¤ arvata uudelleen! \nVihje: Sana alkaa kirjaimella, joka on iso kirjain. \nVoit myÃ¶s kokeilla kirjoittaa kirjaimia eri jÃ¤rjestykseen paperille.")
            print("")

# KÃ¤ynnistÃ¤ peli
if __name__ == "__main__":
    pelaa_peli()

